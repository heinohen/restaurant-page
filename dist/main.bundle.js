(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),o=t.n(r),c=t(645),a=t.n(c)()(o());a.push([n.id,"/* FOR ALL */\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n/*FOR BODY AREA*/\nbody {\n    background-color: gray;\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    justify-content: space-between;\n}\n\n\n/* navbar controls */\n#navbar {\n    border-bottom: 10px solid;\n    height: 150px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n#ul-container{\n    background-color: royalblue;\n}\n\n#ul-container > ul {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    gap: 20px;\n    list-style: none;\n}\n\n.icon {\n    height: 30px;\n    width: 30px;\n}\n\n.btn {\n    background-color: red;\n    height: 100px;\n    width: 100px;\n    border-radius: 40px;\n    \n}\n\n\n/* main area */\n#maincontent {\n    flex: 1;\n    border: 5px dashed red;\n}\n\n\n/* footer */\n#footer {\n    height: 50px;\n    padding-top: 10px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,YAAY;;AAEZ;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA,gBAAgB;AAChB;IACI,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,8BAA8B;AAClC;;;AAGA,oBAAoB;AACpB;IACI,yBAAyB;IACzB,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,qBAAqB;IACrB,aAAa;IACb,YAAY;IACZ,mBAAmB;;AAEvB;;;AAGA,cAAc;AACd;IACI,OAAO;IACP,sBAAsB;AAC1B;;;AAGA,WAAW;AACX;IACI,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;AACb",sourcesContent:["/* FOR ALL */\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n/*FOR BODY AREA*/\nbody {\n    background-color: gray;\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    justify-content: space-between;\n}\n\n\n/* navbar controls */\n#navbar {\n    border-bottom: 10px solid;\n    height: 150px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n#ul-container{\n    background-color: royalblue;\n}\n\n#ul-container > ul {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    gap: 20px;\n    list-style: none;\n}\n\n.icon {\n    height: 30px;\n    width: 30px;\n}\n\n.btn {\n    background-color: red;\n    height: 100px;\n    width: 100px;\n    border-radius: 40px;\n    \n}\n\n\n/* main area */\n#maincontent {\n    flex: 1;\n    border: 5px dashed red;\n}\n\n\n/* footer */\n#footer {\n    height: 50px;\n    padding-top: 10px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n}\n"],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,c){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(a[d]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&a[l[0]]||(void 0!==c&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=c),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([c]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var c={},a=[],i=0;i<n.length;i++){var d=n[i],s=r.base?d[0]+r.base:d[0],l=c[s]||0,u="".concat(s," ").concat(l);c[s]=l+1;var A=t(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var m=o(p,r);r.byIndex=i,e.splice(i,0,{identifier:u,updater:m,references:1})}a.push(u)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var c=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<c.length;a++){var i=t(c[a]);e[i].references--}for(var d=r(n,o),s=0;s<c.length;s++){var l=t(c[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}c=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var c=t.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var c=e[r]={id:r,exports:{}};return n[r](c,c.exports,t),c.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),c=t(569),a=t.n(c),i=t(565),d=t.n(i),s=t(216),l=t.n(s),u=t(589),A=t.n(u),p=t(426),m={};m.styleTagTransform=A(),m.setAttributes=d(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const h=t.p+"a47b55cf5beefc2e6d6b.png",f=t.p+"462a3d6b123d643279be.png",b=t.p+"8a0d37157b5f80f15c91.png";function C(){var n=document.createElement("div");n.setAttribute("id","maincontent");var e=document.createElement("h2");return e.textContent="{FrOnTpAgE placeholder}",n.appendChild(e),n}const g=t.p+"0035c307a36c17babb8d.png",v=document.createElement("div");v.setAttribute("id","content"),document.body.appendChild(v),v.appendChild(function(){(new Image).src=h,(new Image).src=f,(new Image).src=b;const n=document.createElement("div");n.setAttribute("id","navbar");const e=document.createElement("h1");e.textContent="{NAVBAR PLACEHOLDER}",n.appendChild(e);const t=document.createElement("div");t.setAttribute("id","ul-container"),n.appendChild(t);const r=document.createElement("ul"),o=document.createElement("li"),c=document.createElement("img"),a=document.createElement("p");a.textContent="Frontpage",c.setAttribute("class","icon"),c.src=h;const i=document.createElement("button");i.setAttribute("class","btn"),i.setAttribute("id","frontbutton"),i.appendChild(c),i.appendChild(a),o.appendChild(i);const d=document.createElement("li");d.setAttribute("id","menulle");const s=document.createElement("img"),l=document.createElement("p");l.textContent="menu!",s.src=b,s.setAttribute("class","icon");const u=document.createElement("button");u.setAttribute("class","btn"),u.setAttribute("id","menubutton"),u.appendChild(s),u.appendChild(l),d.appendChild(u);const A=document.createElement("li"),p=document.createElement("img"),m=document.createElement("p");m.textContent="contact us",p.src=f,p.setAttribute("class","icon");const C=document.createElement("button");return C.setAttribute("class","btn"),C.setAttribute("id","contactbutton"),C.appendChild(p),C.appendChild(m),A.appendChild(C),r.appendChild(o),r.appendChild(d),r.appendChild(A),t.appendChild(r),console.log("h√§?"),n}()),v.appendChild(C()),v.appendChild(function(){const n=document.createElement("div");n.setAttribute("id","footer");const e=document.createElement("p");e.textContent="(c) heinohen 2022",n.appendChild(e);const t=document.createElement("a");t.href="https://github.com/heinohen";const r=document.createElement("img");return r.src=g,t.appendChild(r),n.appendChild(t),n}()),document.getElementById("frontbutton").addEventListener("click",(()=>v.childNodes[1].replaceWith(C()))),document.getElementById("menubutton").addEventListener("click",(()=>v.childNodes[1].replaceWith(function(){var n=document.createElement("div");n.setAttribute("id","maincontent");var e=document.createElement("h2");return e.textContent="{MeNu placeholder}",n.appendChild(e),n}()))),document.getElementById("contactbutton").addEventListener("click",(()=>v.childNodes[1].replaceWith(function(){var n=document.createElement("div");n.setAttribute("id","maincontent");var e=document.createElement("h2");return e.textContent="{CoNtAcT placeholder}",n.appendChild(e),n}())))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,